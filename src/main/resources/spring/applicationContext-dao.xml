<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">

	<!-- 数据库连接池 -->
	<!-- 加载配置文件 -->
	<context:property-placeholder location="classpath:properties/*.properties" />
	<!-- 数据库连接池 -->
<!--	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		destroy-method="close">
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="maxActive" value="10" />
		<property name="minIdle" value="5" />
	</bean>-->

	<!--让spring管理sqlsessionfactory 使用mybatis和spring整合包中的-->
<!--   <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
       &lt;!&ndash; 数据库连接池 &ndash;&gt;
		<property name="dataSource" ref="dataSource" />
		&lt;!&ndash; 加载mybatis的全局配置文件 &ndash;&gt;
		<property name="configLocation" value="classpath:mybatis/SqlMapConfig.xml" />
	</bean>-->




	<!-- 配置数据库A -->
	<bean id="storeADataSource" class="com.atomikos.jdbc.nonxa.AtomikosNonXADataSourceBean">
		<property name="uniqueResourceName" value="storeADB" />
		<!-- value只要两个数据源不同就行，随便取名 -->
		<property name="driverClassName">
			<value>${sqlserver.jdbc.driver}</value>
		</property>
		<property name="url">
			<value>${sqlserver.jdbc.url}</value>
		</property>
		<property name="user">
			<value>${sqlserver.jdbc.username}</value>
		</property>
		<property name="password">
			<value>${sqlserver.jdbc.password}</value>
		</property>
	</bean>
	<!-- 数据库A写入SessionFactory -->
	<bean id="sqlStoreASessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="storeADataSource" />
		<property name="configLocation" value="classpath:mybatis/storeAConfig.xml" />
	</bean>
	<!-- 数据库A注入到Spring -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="sqlStoreASessionFactory" />
		<property name="basePackage" value="com.uu.storea.mapper" />
	</bean>

	<!-- 配置数据库B -->
	<bean id="storeBDataSource" class="com.atomikos.jdbc.nonxa.AtomikosNonXADataSourceBean">
		<property name="uniqueResourceName" value="storeBDB" />
		<!-- value只要两个数据源不同就行，随便取名 -->
		<property name="driverClassName">
			<value>${mysql.jdbc.driver}</value>
		</property>
		<property name="url">
			<value>${mysql.jdbc.url}</value>
		</property>
		<property name="user">
			<value>${mysql.jdbc.username}</value>
		</property>
		<property name="password">
			<value>${mysql.jdbc.password}</value>
		</property>
	</bean>

	<!-- 数据库B写入SessionFactory -->
	<bean id="sqlStoreBSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="storeBDataSource" />
		<property name="configLocation" value="classpath:mybatis/storeBConfig.xml" />
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="sqlStoreBSessionFactory" />
		<property name="basePackage" value="com.uu.storeb.mapper" />
	</bean>

	<!-- 配置数据库C -->
	<bean id="storeCDataSource" class="com.atomikos.jdbc.nonxa.AtomikosNonXADataSourceBean">
		<property name="uniqueResourceName" value="storeCDB" />
		<property name="driverClassName">
			<value>${jdbc.driver}</value>
		</property>
		<property name="url">
			<value>${jdbc.url}</value>
		</property>
		<property name="user">
			<value>${jdbc.username}</value>
		</property>
		<property name="password">
			<value>${jdbc.password}</value>
		</property>
	</bean>

	<bean id="sqlStoreCSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="storeCDataSource" />
		<property name="configLocation" value="classpath:mybatis/SqlMapConfig.xml" />
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="sqlStoreCSessionFactory" />
		<property name="basePackage" value="com.ich.*.dao" />
	</bean>

</beans>